Your task will be to create a simulation of a fleet of robots that do some work in order to generate points over a sequence of rounds.


You are managing 10000 robots. Each robot has a unique serial number, an activation round, a deactivation round, an active state, a health state and a task to generate points. 


In the beginning of the simulation each robot will be assigned an activation round as a random number between 1 and 30, and a deactivation round as a random number between 30 and 60. When a robot reaches its activation round it becomes active; when it reaches its deactivation round, it becomes inactive.


Each active robot generates 1 point per round if healthy after performing a workload. A workload consists in generating a number between 1 and 100. If the value is below or equal to 90 the point is generated. If the value is above 90 then the robot becomes unhealthy instead. Until repaired, an active, unhealthy robot generates negative points, -10 per round. 	


The robots cannot fix themselves. They can only be repaired by a fleet of controllers. A controller can monitor a range of robots and repair the unhealthy ones. A robot doesn’t know about the controller but the controller knows about robots. A controller is limited to 100 robot interactions (read robot active status, read robot health status, repair robot) per round. Each round, a controller also consumes 20 points for its own effort. 


The controllers’ fleet has the following characteristics:

Controllers do not know about each other 

Controllers are not directly reachable but are managed from a command center that contains the list of serial numbers of the robots through which a certain controller can interact with a certain robot.

The only permitted interactions for the controller are these 3: read robot active status, read robot health status, repair robot


The command center knows:

Total number of robots, not the robot details

List of controllers 


Your mission is to generate a minimum of 50000 points in 60 rounds.


In a language of your choice, implement a solution that simulates the scenario to generate the points. The solution includes: a description of the model, explanations for the design and algorithm choices, a runnable simulation of the 60 rounds that displays at least the final score.